#!/usr/bin/env python
# Copyright (c) 2019 Alex L. Urban
#
# This file is part of black-hole-astrophysics
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""Stage environment variables for plot rendering
"""

import os
import shutil
import sys

__author__ = 'Alex Urban <aurban1@lsu.edu>'


# -- global variables

ACTIVATE = """#!/bin/sh

export GWPY_RCPARAMS="false"
export GWPY_USETEX="false"
export MATPLOTLIBRC="{data}"
export XDG_DATA_HOME="{data}"
"""

DEACTIVATE = """#!/bin/sh

unset GWPY_RCPARAMS
unset GWPY_USETEX
unset MATPLOTLIBRC
unset XDG_DATA_HOME
"""


# -- utilities

def get_etc_path(action):
    """Returns the appropriate configuration path
    """
    base = os.path.join(sys.prefix, 'etc', 'conda')
    return os.path.join(base, '{}.d'.format(action))


def get_share_path():
    """Returns path to shared files within black-hole-astrophysics
    """
    cwd = os.path.dirname(__file__)
    share = os.path.join(cwd, '../share')
    return os.path.abspath(share)


# -- body

share = get_share_path()
activate = get_etc_path('activate')
deactivate = get_etc_path('deactivate')
data = os.path.join(sys.prefix, 'etc', 'data')

# create directories
os.makedirs(activate, exist_ok=True)
os.makedirs(deactivate, exist_ok=True)
os.makedirs(data, exist_ok=True)

# get filenames
activate = os.path.join(activate, 'env_vars.sh')
deactivate = os.path.join(deactivate, 'env_vars.sh')

# write scripts
with open(activate, 'w') as f:
    f.write(ACTIVATE.format(data=data))
with open(deactivate, 'w') as f:
    f.write(DEACTIVATE)

# copy data
shutil.copyfile(
    os.path.join(share, 'matplotlibrc'),
    os.path.join(data, 'matplotlibrc'),
)
shutil.copytree(
    os.path.join(share, 'fonts'),
    os.path.join(data, 'fonts'),
)
